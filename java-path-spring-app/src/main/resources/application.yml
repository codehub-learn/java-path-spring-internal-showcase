spring:
  profiles:
    active: #active.profiles#
  data:
    jpa:
      repositories:
        bootstrap-mode: default
        enabled: true
  datasource:
    driver-class-name: org.h2.Driver
    hikari:
      auto-commit: false
      connection-test-query: select 1 from dual
      connection-timeout: 10000
      idle-timeout: 30000
      max-lifetime: 60000
      maximum-pool-size: 10
      minimum-idle: 1
      pool-name: eshopConnectionPooling
      transaction-isolation: TRANSACTION_READ_COMMITTED
      username: sa
      password: sa
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:file:~/.h2/internal/eshop;IFEXISTS=FALSE;AUTO_SERVER=TRUE;
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: false
    properties:
      hibernate:
        batch_versioned_data: true
        connection:
          # Sources
          # https://vladmihalcea.com/spring-transaction-connection-management
          # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
          # handling_mode: DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT
          provider_disables_autocommit: true
        dialect: org.hibernate.dialect.H2Dialect
        jdbc:
          batch_size: 100
        format_sql: true
        order_inserts: true
        order_updates: true
        query:
          in_clause_parameter_padding: true
        generate_statistics: true # NOT a production setting
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 10 # NOT a production setting
    show-sql: false
  sql:
    init:
      # Mode to apply when determining if DataSource initialization should be performed using the available DDL (schema
      # .sql) and DML (data.sql) scripts.
      mode: never
      platform: h2
  task:
    scheduling:
      pool:
        size: 2
      thread-name-prefix: scheduler-
  jackson:
    serialization:
      fail-on-empty-beans: false
  jmx:
    enabled: false
  threads:
    virtual:
      enabled: true

management:
  endpoint:
    shutdown:
      enabled: true # Remote shutdown of the application
    health:
      show-details: always # See the following: https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-health
      group:
        custom:
          include: diskSpace, ping # Custom group which contains components the developer defines
      cache:
        time-to-live: "30s" # Health endpoint is cached for 30 seconds
  endpoints:
    enabled-by-default: true
    web:
      base-path: /management # Default discovery URL is /actuator but we can even set it to /management/actuator
      discovery:
        enabled: true
      exposure:
        # Or use the following: health,info,metrics,loggers,auditevents,sessions
        # You can even do the opposite, include everything and then exclude the ones you don't want to expose
        include: "*"
    jmx:
      exposure:
        include: "*"
  server:
    port: 9090 # Custom port if we want the actuator endpoints to be on a different port than our application
